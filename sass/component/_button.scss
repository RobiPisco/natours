/*----link is the state of our botton selector----*/
.btn {
    &, //with this all is getting applied to all button element as well and not only to the one with link or visited
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: $default-font-size;

        //change for the <botton> element in the form
        border: none;
        cursor: pointer;
    }
    
    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, .2); /*x y blur*/

        &::after {
            transform: scaleX(1.5) scaleY(1.6); /*this determinate how big the btn has to become*/
            opacity: 0;
        }
    }

    &:active,
    &:focus {
        outline: none;
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }

    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1; /*z-index define the positio of the element of one on top of an other one*/
        transition: all .4s;
    }

    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards; /*automatically apply the style of 0% before the animation start so the style so, thist style @keyframes moveInBottom will be applied before the animation start*/
    }   
    
}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 0.1rem solid $color-primary;
        padding: 0.3rem;
        transition: all .2s
    }

    &:hover {
        background-color: $color-primary;
        color: white;
        box-shadow: 0 1rem 2rem rgba($color-black, .30); //Xdirectio Ydirection blur rgba()
        transform: translateY(-.2rem);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .30); //Xdirectio Ydirection blur rgba()
        transform: translateY(0);
    }
}